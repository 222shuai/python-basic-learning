1.颜色：
bgcolor = pygame.Color(0)  # 定义背景色变量bgcolor("r,g,b")
# r:红色值；g:绿色值；b:蓝色值//"black"="0,0,0";"white"="255,255,255"
屏幕颜色填充：screen.fill(bgcolor)  # 背景颜色填充
2.图形绘制：
pygame.draw.rect(Surface, color, Rect, width=0) //Rect:矩形绘制区域
pygame.draw.polygon(Surface, color, pointlist, width=0) //pointlist:多边形顶点坐标列表
pygame.draw.circle(Surface, color, pos, radius, width=0) //pos:圆心;radius:半径
pygame.draw.ellipse(Surface, color, Rect, width=0) //Rect:椭圆形绘制区域
pygame.draw.arc(Surface, color, Rect, start_angle, stop_angle, width=0)
//Rect:椭圆形绘制区域;start_angle,stop_angle:弧形绘制起始和结束弧度值，横向右侧为0度
pygame.draw.line(Surface, color, start_pos, end_pos, width=1)
//start_pos.end_pos:直线起始和结束坐标，width:直线宽度，默认为1
pygame.draw.lines(Surface, color, closed, pointlist, width=1)
//closed:True表示起止节点间自动增加封闭直线,False表示绘制多条线段
//pointlist:连续多线的顶点坐标列表;width=1:连续多线的宽度，默认为1
pygame.draw.aaline(Surface, color, start_pos, end_pos, blend=1)
//start_pos.end_pos:无锯齿线起始和结束坐标，blend=1:不为零时，与线条所在背景颜色进行混合
pygame.draw.aalines(Surface, color, closed, pointlist, blend=1)
//closed:True表示起止节点间自动增加封闭直线,False表示绘制多条线段
//pointlist:连续无锯齿线的顶点坐标列表;width=1:连续多线的宽度，默认为1

# draw类:包含圆形，矩形rect，多边形polygon，椭圆，
  椭圆弧线，直线，多条连续线，无锯齿线(减弱直线绘制因像素产生的锯齿效果)等
# Surface: 图形的绘制屏幕; Color: 图形的绘制颜色;
# Rect: 图形的绘制区域; width=0: 绘制边缘的宽度，默认为0，即填充图形